@import './variables.scss';
@import './mixins/BaseTransitionCard.scss';

@mixin AvatarSize($important: false) {
  height: 24px#{if($important, ' !important', '')};
  width: 24px#{if($important, ' !important', '')};
}

@mixin NotActiveText() {
  font-size: 0.75rem !important;
  color: var(--chakra-colors-gray-250) !important;
  text-transform: lowercase !important;
  font-weight: 400 !important;
}

@mixin List() {
  &__Pagination {
    margin-top: 2rem !important;
  }

  &__ScrollZone {
    width: fit-content;
    min-width: 100%;
  }

  @media screen and (max-width: $breakpoint-md) {
    &__Pagination {
      margin-top: 1.5rem !important;
    }
  }

  @media screen and (max-width: $breakpoint-sm) {
    &__Pagination {
      margin-top: 1rem !important;
    }
  }
}

@mixin DefListItem($clickable: true) {
  display: flex;
  width: 100%;
  text-decoration: none;
  padding: 7px 12px;
  margin-bottom: 8px;
  line-height: 24px;
  color: var(--chakra-colors-gray-100);
  font-family: $font-mono;
  font-size: 12pt;
  border-radius: 10px;
  border: 1px solid var(--chakra-colors-gray-750);
  background-color: rgba(var(--chakra-colors-gray-800-rgb), .5);
  transition: all .1s;

  @if $clickable {
    @media (hover: hover) and (pointer: fine) {
      &:hover {
        background-color: var(--chakra-colors-gray-750);
        text-decoration: none;
        cursor: pointer;
      }
    }

    &:active {
      transform: translateY(1px);
      box-shadow: 0 0 9999px 0 rgba(0, 0, 0, .25) inset;
    }
  }

  &:last-child {
    margin-bottom: 0;
  }

  &__Column {
    &--Credits, &--Number {
      font-size: 0.75rem;
      font-weight: 700;
    }
  }

  &__IdentifierContainer {
    display: flex;
    align-items: center;
    min-width: 50px;
  }

  &__Avatar {
    @include AvatarSize;
    flex-shrink: 0;
    margin-right: 12px;
  }

  &--Timestamp, &__Column--Timestamp {
    font-family: $font-mono;
    white-space: nowrap;
    color: #fff;

    &, .DateBlock__Date {
      font-size: 0.75rem;
    }
  }
}

@mixin defListTitles {
  display: grid;
  padding: 7px 12px;
  border-radius: 10px;
  background-color: var(--chakra-colors-gray-800);
  margin-bottom: 8px;
  font-family: $font-heading;
  font-weight: 700;
  font-size: 12px;
  text-transform: uppercase;
  color: var(--chakra-colors-white);

  &--Light {
    background: transparent !important;
    font-weight: 500 !important;
    color: #fff !important;
    text-transform: none !important;
  }
}

@mixin LoadingLine($delay: 0, $colorScheme: 'default') {
  overflow: hidden;
  position: relative;

  $colorSchemes: (
    'default': (
      'before': var(--chakra-colors-gray-900),
      'after': linear-gradient(90deg, rgb(14 117 181) 0%, rgb(22 82 120) 100%)
    ),
    'gray': (
      'before': rgba(var(--chakra-colors-gray-800-rgb), 5),
      'after': rgba(255, 255, 255, .3)
    )
  );

  @keyframes LoadingLine {
    0% {
      left: -100%;
      width: 100%;
    }
    50% {
      left: 100%;
      width: 100%;
    }
    100% {
      left: 100%;
      width: 100%;
    }
  }

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: map-get(map-get($colorSchemes, $colorScheme), 'before');
    border-radius: 5px;
    opacity: 1;
  }

  &::after {
    content: '';
    position: absolute;
    z-index: 2;
    top: 0;
    left: -50%;
    width: 40%;
    height: 100%;
    background: map-get(map-get($colorSchemes, $colorScheme), 'after');
    border-radius: 100px;
    opacity: .1;
    animation: LoadingLine linear 3s infinite;
  }

  Tr & {
    &::before {
      background-color: var(--chakra-colors-gray-800);
      opacity: .2;
    }
  }

  $timeOffset: 0.5s;

  @for $i from 1 through 10 {
    &:nth-child(#{$i}n) {
      &::after {
        animation-delay: ($i - 2) * $timeOffset + ($delay * 0.15s);
      }
    }

    Tr:nth-child(#{$i}n) & {
        &::after {
            animation-delay: ($i - 2) * $timeOffset + ($delay * 0.15s);
        }
    }
  }
}

@mixin LoadingContainer {
  @keyframes loading-process {
    from {
      opacity: 0;
      left: -100%;
      z-index: 6;
    }
    50% {
      opacity: .25;
    }
    to {
      z-index: 6;
      left: 100%;
    }
  }
  
  @keyframes LoadingContainer {
    from {
      overflow: hidden;
    }
    to {
      overflow: hidden;
    }
  }

  overflow: hidden;
  position: relative;
  animation: 1s LoadingContainer infinite;

  &::before {
    z-index: 5 !important;
    opacity: 1 !important;
  }

  &::after {
    animation: 1s loading-process infinite;
    z-index: 6;
  }
  
  &::before, &::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: -1;
  }

  &::before {
    background-color: var(--chakra-colors-gray-900);
  }

  &::after {
    background: linear-gradient(90deg, transparent 0%, rgb(14 117 181) 50%, transparent 100%) !important;
    width: 100%;
    height: 100%;
  }
}

@mixin AvatarContainer {
  border-radius: $border-radius-def;
  box-shadow: 0 2px 4px rgba(0, 0, 0, .3);
  background-color: var(--chakra-colors-gray-900);
  border: 1px solid var(--chakra-colors-whiteAlpha-100);
  overflow: hidden;

  img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    object-position: center;
  }
}

@mixin DefButton {
  display: block;
  position: relative;
  z-index: 1;
  text-align: center;
  font-family: $font-heading;
  font-size: 12px;
  font-weight: 700;
  text-transform: uppercase;
  padding: 12px;
  border-radius: 10px;
  overflow: hidden;
  background-color: transparent;
  transition: all 0.5s;
  
  &::before, &::after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
  }

  &::before {
    background-color: var(--chakra-colors-gray-800);
    width: 100%;
    z-index: -1;
    transition: all 1s;
  }

  &::after {
    width: 300px;
    background: linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, .1), rgba(255, 255, 255, 0));
    transform: translateX(-100%);
    opacity: 0;
    transition: all .5s;
  }

  @keyframes flash {
    from {
      left: 0;
      transform: translateX(-100%);
    }

    to {
      left: 100%;
      transform: translateX(0);
    }
  }

  &:hover, &:focus-within {
    background-color: $color-brand-normal;

    &::before {
      opacity: .85;
    }

    &::after {
      animation: flash 1s backwards;
      pointer-events: none;
      opacity: 1;
    }
  }
}

@mixin BlockSpacing ($property) {
  #{$property}: var(--chakra-space-10);

  @media screen and (max-width: $breakpoint-xl) {
    #{$property}: var(--chakra-space-5);
  }

  @media screen and (max-width: $breakpoint-lg) {
    #{$property}: var(--chakra-space-5);
  }

  @media screen and (max-width: $breakpoint-md) {
    #{$property}: var(--chakra-space-4);
  }

  @media screen and (max-width: $breakpoint-sm) {
    #{$property}: var(--chakra-space-3);
  }
}

@mixin InfoContainerPadding($property, $adjustment: 0px, $important: false, $invert: false) {
  $base-value: if($invert, 'calc(0px - var(--chakra-space-3))', 'var(--chakra-space-3)');

  #{$property}: calc(#{$base-value} + #{$adjustment})#{if($important, ' !important', '')};

  @media screen and (min-width: $breakpoint-md) {
    $base-value: if($invert, 'calc(0px - var(--chakra-space-4))', 'var(--chakra-space-4)');
    #{$property}: calc(#{$base-value} + #{$adjustment})#{if($important, ' !important', '')};
  }

  @media screen and (min-width: $breakpoint-lg) {
    $base-value: if($invert, 'calc(0px - var(--chakra-space-5))', 'var(--chakra-space-5)');
    #{$property}: calc(#{$base-value} + #{$adjustment})#{if($important, ' !important', '')};
  }

  @media screen and (min-width: $breakpoint-xl) {
    $base-value: if($invert, 'calc(0px - var(--chakra-space-6))', 'var(--chakra-space-6)');
    #{$property}: calc(#{$base-value} + #{$adjustment})#{if($important, ' !important', '')};
  }
}

@mixin navContainerPadding ($property, $important: false) {
  #{$property}: var(--chakra-space-3)#{if($important, ' !important', '')};
}

@mixin pageDataPadding($property, $important: false, $invert: false) {
  $base-value: if($invert, 'calc(0px - var(--chakra-space-3))', 'var(--chakra-space-3)');
  #{$property}: #{$base-value}#{if($important, ' !important', '')};

  @media screen and (min-width: $breakpoint-md) {
    $base-value: if($invert, 'calc(0px - var(--chakra-space-4))', 'var(--chakra-space-4)');
    #{$property}: #{$base-value}#{if($important, ' !important', '')};
  }

  @media screen and (min-width: $breakpoint-lg) {
    $base-value: if($invert, 'calc(0px - var(--chakra-space-6))', 'var(--chakra-space-6)');
    #{$property}: #{$base-value}#{if($important, ' !important', '')};
  }

  @media screen and (min-width: $breakpoint-xl) {
    $base-value: if($invert, 'calc(0px - var(--chakra-space-8))', 'var(--chakra-space-8)');
    #{$property}: #{$base-value}#{if($important, ' !important', '')};
  }
}

@mixin Block ($border: false, $borderColor: $color-brand-normal) {
  backdrop-filter: $blockBackgroundBlur;
  border-radius: var(--chakra-radii-block);
  border: 1px solid rgba(255, 255, 255, 0.1);
  background: rgba(24, 31, 34, 0.2);

  @if $border {
    box-shadow: 2px 2px #{if($borderColor, $borderColor, $color-brand-normal)};
  }
}

@mixin TooltipElement () {
  &, .chakra-icon {
    transition: .2s;
  }

  .chakra-icon {
    color: $color-brand-normal;
  }

  &:hover {
    color: $color-brand-light;
    cursor:  default;

    .chakra-icon {
      color: $color-brand-light;
    }
  }
}

@mixin TotalCard ($avatarAbsolute: false) {
  &__Title {
    white-space: break-spaces;
    word-break: break-all;

    .Alias__Name, .Alias__Domain {
      font-family: $font-heading;
      font-size: 0.875rem;
      font-weight: 700;
    }

    .Alias__Domain {
      color: var(--chakra-colors-brand-light);
      opacity: 1;
    }
  }

  &--Loading {
    .InfoLine__Value {
      height: 1.5rem;
    }
  }

  &__ContentContainer {
    display: flex;
    gap: 2.5rem;
  }

  &__Column {
    position: relative;
    width: 50%;
  }

  &__Header {
    position: relative;
    display: flex;
    width: 100%;
    align-items: center;
  }

  &__Avatar {
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: $font-mono;
    font-size: 0.75rem;
    color: var(--chakra-colors-gray-500);
    width: 88px;
    height: 88px;
    border: 1px solid rgba(137, 126, 126, 0.1);
    flex-shrink: 0;
    margin-left: 24px;

    @if $avatarAbsolute {
      position: absolute;
      right: 0;
      top: 0;
      margin: 0;
    }
  }

  &__HeaderLines {
    display: flex;
    gap: 20px;
    flex-direction: column;
    justify-content: space-between;
    width: 100%;
    padding: 6px 0;
    overflow: hidden;
  }

  &__InfoLine {
    gap: 14px;
  }

  &__CommonInfo {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;

    .HorisontalSeparator {
      margin: 0;
    }
  }

  @media screen and (max-width: $breakpoint-lg) {
    &__ContentContainer {
      gap: 1.5rem;
    }
  }

  @media screen and (max-width: $breakpoint-md) {
    $gap: 0.75rem;

    &__ContentContainer {
      flex-direction: column;
    }

    &__ContentContainer, &__CommonLines {
      gap: $gap;
    }

    &__Column {
      position: static;
      width: 100%;
    }
  }
}

@mixin DigestCard () {
  @include InfoContainerPadding(padding, 0px, false);
  font-family: $font-mono;
  font-size: 0.75rem;
  display: flex;
  flex-direction: column;
  gap: 0.875rem;
  background: rgba(var(--chakra-colors-gray-800-rgb), .5);
  border-radius: $border-radius-def;
  container-type: inline-size;

  &--Loading {
    .InfoLine__Value {
      height: 1.5rem;
    }
  }

  &--Loading & {
    &__InfoContainer {
      overflow: hidden;
    }

    &__InfoContainerValue {
      width: 100px;
      max-width: 100%;
    }
  }

  &__RowContainer {
    display: flex;
    justify-content: space-between;
    gap: 0.875rem;
  }

  &__InfoContainer {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 4px;
    padding: 24px;
    background: rgba(var(--chakra-colors-gray-800-rgb), .5);
    border-radius: $border-radius-def;
    width: 100%;

    .InfoLine__Title {
      svg {
        width: 1.75rem;
        height: 1.75rem;
      }
    }
  }

  &__LinesContainer {
    flex-direction: column;
  }
}

@mixin BrandScroll () {
  scroll-behavior: smooth;
  scrollbar-width: thin;
  scrollbar-color: $scrollColor $scrollBackgroundColor;

  &::-webkit-scrollbar {
    height: 2px;
    width: 2px;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $scrollColor;
  }

  &::-webkit-scrollbar-track {
    background-color: $scrollBackgroundColor;
  }

  @supports (scrollbar-width: thin) {
    scrollbar-width: thin;
    scrollbar-color: $scrollColor $scrollBackgroundColor;
  }
}

@mixin displayUserSelect {
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
