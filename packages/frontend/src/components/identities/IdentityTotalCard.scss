@use '../../styles/mixins';
@import '../../styles/variables';

.IdentityTotalCard {
  $gap: 14px;
  @include mixins.EntityCard();
  @include mixins.InfoContainerPadding(padding, 0px, true);
  display: flex;
  flex-direction: column;
  gap: $gap;

  &__Title {
    .Alias__Name, .Alias__Domain {
      font-family: $font-heading;
      font-size: 0.875rem;
      font-weight: 700;
    }

    .Alias__Domain {
      color: var(--chakra-colors-brand-light);
      opacity: 1;
    }
  }

  &--Loading & {
    &__InfoLine {
      .InfoLine__Value {
        height: 24px;
      }
    }

    &__Avatar {
      @include mixins.LoadingContainer;
    }

    &__Header {
      .InfoLine__Value {
        width: 100% !important;
      }
    }
  }

  &__Header {
    display: flex;
    align-items: center;
    width: 100%;
  }

  &__ZeroListBadge {
    padding: 4px 10px;
    font-family: $font-mono;
    color: var(--chakra-colors-gray-250);
  }

  &__ContentContainer {
    display: flex;
    gap: 40px;
  }

  &__CommonLines {
    display: flex;
    flex-direction: column;
    gap: 24px;
  }

  &__Column {
    position: relative;
    width: 50%;
  }

  &__InfoLine {
    &--Names {
      align-items: baseline;
      flex-wrap: wrap;

      .InfoLine__Value {
        margin-left: auto;
        max-width: 100%;
      }
    }

    &--Identifier {
      .InfoLine__Value {
        container-type: inline-size;
        width: 100%;
      }


      .Identifier__SymbolsContainer {
        margin-left: auto;

        @container (max-width: 22rem) {
          max-width: 10rem;
        }
      }
    }
  }

  &__PublicKeysShowButton {
    width: max-content;
    font-weight: 500 !important;
    text-transform: capitalize !important;

    svg {
      transition: .2s;
    }
  }

  &__PublicKeysList {
    position: absolute;
    width: 100%;
    top: 0;
    opacity: 0;
    transition: opacity .3s;

    &--Show {
      position: relative;
      opacity: 1;
    }
  }

  &__PublicKeysListContainer {
    transition: .3s !important;

    &--Hidden {
      margin-top: -$gap !important;
    }

    &--Mobile {
      display: none !important;
    }
  }

  &__Separator {
    margin: 20px 0;
  }

  @media screen and (max-width: $breakpoint-lg) {
    &__InfoLine {
      &--Names {
        flex-wrap: wrap;
        justify-content: space-between;

        .InfoLine__Value {
          margin-left: auto;
        }
      }
    }
  }


  @media screen and (max-width: $breakpoint-lg) {
    &__InfoLine {
      &--Identifier, &--Balance  {
        flex-direction: column;
        align-items: flex-start;

        .InfoLine__Value {
          text-align: left;
        }
      }
    }
  }

  @media screen and (min-width: $breakpoint-md) and (max-width: $breakpoint-lg),
  screen and (max-width: $breakpoint-md) {
    &__InfoLine {
      gap: 4px;

      &--Identifier {
        .Identifier__SymbolsContainer {
          margin-left: 0;
        }
      }
    }
  }

  @media screen and (max-width: $breakpoint-md) {
    $gap: 12px;

    &__Separator {
      @include mixins.InfoContainerPadding(margin-top, 0px, true);
      @include mixins.InfoContainerPadding(margin-bottom, 0px, true);
    }

    &__ContentContainer {
      flex-direction: column;
    }

    &__ContentContainer, &__CommonLines {
      gap: $gap;
    }

    &__PublicKeysListContainer {
      &--Hidden {
        margin-top: -$gap !important;
      }

      &--Mobile {
        display: block !important;
      }

      &--Desktop {
        display: none !important;
      }
    }

    &__Column {
      position: static;
    }

    &__Column {
      width: 100%;
    }

    &__InfoLine {
      flex-wrap: wrap;
    }

    &--Loading {
      .InfoLine__Value {
        width: 100% !important;
      }
    }
  }

  @media screen and (max-width: $breakpoint-sm) {
    &__Digest {
      @include mixins.InfoContainerPadding(margin-left, 0px, true, true);
      @include mixins.InfoContainerPadding(margin-right, 0px, true, true);
      @include mixins.InfoContainerPadding(margin-bottom, 0px, true, true);
    }
  }
}